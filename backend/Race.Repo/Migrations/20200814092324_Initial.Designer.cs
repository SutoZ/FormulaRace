// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Race.Repo.ApplicationContext;

namespace Race.Repo.Migrations
{
    [DbContext(typeof(RaceContext))]
    [Migration("20200814092324_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Race.Model.Models.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Nationality")
                        .IsRequired();

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<int>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Pilots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "HAM",
                            Name = "Lewis Hamilton",
                            Nationality = "British",
                            Number = "44",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "HEI",
                            Name = "Nick Heidfeld",
                            Nationality = "German",
                            Number = "50",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "ROS",
                            Name = "Nico Rosberg",
                            Nationality = "German",
                            Number = "6",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "RAI",
                            Name = "Kimi Raikonnen",
                            Nationality = "Finnish",
                            Number = "14",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = "KUB",
                            Name = "Robert Kubica",
                            Nationality = "Polish",
                            Number = "19",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            Code = "GLO",
                            Name = "Timo Glock",
                            Nationality = "German",
                            Number = "20",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 7,
                            Code = "SAT",
                            Name = "Tacuma Sato",
                            Nationality = "Japanese",
                            Number = "21",
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("Race.Model.Models.Result", b =>
                {
                    b.Property<int>("ResultId");

                    b.Property<Guid>("PilotId");

                    b.Property<int>("RaceId");

                    b.HasKey("ResultId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Race.Model.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChampionShipPoints");

                    b.Property<DateTime>("DateOfFoundation");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("OwnerName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChampionShipPoints = 20,
                            DateOfFoundation = new DateTime(1950, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ferrari",
                            OwnerName = "Teszt Random"
                        },
                        new
                        {
                            Id = 2,
                            ChampionShipPoints = 30,
                            DateOfFoundation = new DateTime(1970, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mercedes",
                            OwnerName = "Teszt Random 23"
                        });
                });

            modelBuilder.Entity("Race.Model.Models.Pilot", b =>
                {
                    b.HasOne("Race.Model.Models.Team", "Team")
                        .WithMany("Pilots")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Race.Model.Models.Result", b =>
                {
                    b.HasOne("Race.Model.Models.Pilot", "Pilot")
                        .WithMany("Results")
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
